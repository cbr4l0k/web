---
export interface Props {
  headings: { depth: number; slug: string; text: string }[];
  title?: string;
}

const { headings, title = "Contents" } = Astro.props;

// Filter headings to only include h1, h2, h3
const filteredHeadings = headings.filter(h => h.depth <= 3);
---

{filteredHeadings.length > 0 && (
  <nav class="toc" aria-label="Table of Contents">
    <button class="toc-header" type="button">
      <span class="toc-title">{title}</span>
      <span class="toc-toggle">â–¼</span>
    </button>
    <ul class="toc-list hidden">
      {filteredHeadings.map((heading) => (
        <li class={`toc-item toc-level-${heading.depth}`}>
          <a href={`#${heading.slug}`} class="toc-link">
            {heading.text}
          </a>
        </li>
      ))}
    </ul>
  </nav>
)}

<style>
  .toc {
    border: 1px solid #d1d5db;
    border-radius: 0.375rem;
    padding: 0.5rem;
    margin-bottom: var(--space-xl);
    transition: box-shadow 150ms ease, transform 150ms ease;
    cursor: pointer;
  }

  .toc:hover {
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    transform: translateY(-2px);
  }

  .toc-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    background: none;
    border: none;
    padding: 0;
    margin-bottom: 0;
    cursor: pointer;
    text-align: left;
  }

  .toc-title {
    font-size: 0.875rem;
    font-weight: 600;
    color: #222;
  }

  .toc-toggle {
    font-size: 0.75rem;
    color: #6b7280;
    transition: transform 150ms ease;
  }

  .toc.open .toc-toggle {
    transform: rotate(180deg);
  }

  .toc-list {
    list-style: none;
    padding: 0;
    margin: 0;
    margin-top: 0.75rem;
    padding-top: 0.75rem;
    border-top: 1px solid #e5e7eb;
  }

  .toc-list.hidden {
    display: none;
  }

  .toc-item {
    margin: 0;
    line-height: 1.8;
  }

  /* Hierarchical indentation */
  .toc-level-1 {
    padding-left: 0;
    margin-top: 0.25rem;
  }

  .toc-level-2 {
    padding-left: 1rem;
    font-size: 0.9375rem;
  }

  .toc-level-3 {
    padding-left: 2rem;
    font-size: 0.875rem;
  }

  .toc-link {
    color: #374151;
    text-decoration: none;
    display: inline-block;
    padding: 2px 0;
    transition: color 100ms ease;
  }

  .toc-link:hover {
    color: #111827;
    text-decoration: underline;
  }

  .toc-link:focus {
    outline: none;
    text-decoration: underline;
  }

  /* Level 1 headers are bolder */
  .toc-level-1 .toc-link {
    font-weight: 600;
    color: #222;
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .toc {
      padding: 0.5rem;
      margin-bottom: var(--space-lg);
    }

    .toc-level-2 {
      padding-left: 0.5rem;
      font-size: 0.875rem;
    }

    .toc-level-3 {
      padding-left: 1rem;
      font-size: 0.8125rem;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const tocElements = document.querySelectorAll('.toc');

    tocElements.forEach(toc => {
      const header = toc.querySelector('.toc-header');
      const list = toc.querySelector('.toc-list');

      if (header && list) {
        header.addEventListener('click', function(e) {
          e.preventDefault();
          list.classList.toggle('hidden');
          toc.classList.toggle('open');
        });
      }
    });
  });
</script>
