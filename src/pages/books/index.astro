---
import BaseLayout from "../../layouts/BaseLayout.astro";
import Nav from "../../components/Nav.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";

const modules = import.meta.glob('./*.astro', { eager: true });
const parseDate = (dateStr) => {
  if (!dateStr) return new Date('24/05/2025');
  const [day, month, year] = dateStr.split('/');
  return new Date(year, month - 1, day);
};

const books = Object.entries(modules)
  .map(([path, mod]: any) => ({
    ...(mod?.meta ?? {}),
    slug: (mod?.meta?.slug) ?? path.replace(/^\.\/(.*)\.astro$/, '$1')
  }))
  .filter((b) => b && b.title && b.author);

const currentlyReading = books.filter(book => book.started && !book.finished)
  .sort((a, b) => {
    const dateA = parseDate(a.started);
    const dateB = parseDate(b.started);
    return dateB.getTime() - dateA.getTime();
  });

const finishedBooks = books.filter(book => book.finished)
  .sort((a, b) => {
    const dateA = parseDate(a.finished);
    const dateB = parseDate(b.finished);
    return dateB.getTime() - dateA.getTime();
  });

const booksByYear = finishedBooks.reduce((acc, book) => {
  const date = parseDate(book.finished);
  const year = date.getFullYear();
  const month = date.toLocaleDateString('en', { month: 'long' });
  
  if (!acc[year]) {
    acc[year] = {};
  }
  if (!acc[year][month]) {
    acc[year][month] = [];
  }
  acc[year][month].push(book);
  
  return acc;
}, {});

const sortedYears = Object.keys(booksByYear).sort((a, b) => parseInt(b) - parseInt(a));
---
<BaseLayout title="Books">
  <Fragment slot="nav"><Nav /></Fragment>
  <Fragment slot="header"><Header /></Fragment>
  <Fragment slot="footer"><Footer /></Fragment>

  <h1 class="text-2xl font-bold mb-6">Books</h1>
  
  {currentlyReading.length > 0 && (
    <div class="mb-8">
      <h2 class="text-xl font-bold mb-4 text-[#222]">Currently Reading</h2>
      <ul class="grid gap-4 sm:grid-cols-2">
        {currentlyReading.map((b) => (
          <li class="rounded border border-gray-200 bg-white p-4 shadow-sm transition hover:shadow hover:-translate-y-0.5">
            <a href={`/books/${b.slug}`} class="no-underline">
              <div class="mb-2 flex items-center justify-between">
                <h4 class="text-lg font-semibold text-[#222]">{b.title}</h4>
                <span class={`inline-flex items-center rounded-full px-2 py-0.5 text-[10px] font-semibold ring-1 ring-inset ${b.status === 'in-progress' ? 'bg-[#ed225d]/10 text-[#ed225d] ring-[#ed225d]/30' : 'bg-emerald-600/10 text-emerald-700 ring-emerald-600/30'}`}>{b.status ?? 'tbd'}</span>
              </div>
              <p class="text-xs opacity-70 mb-2">{b.author}</p>
              <p class="text-sm opacity-90">{b.summary}</p>
              <p class="text-xs text-gray-500 mt-2">Started: {b.started}</p>
            </a>
          </li>
        ))}
      </ul>
    </div>
  )}
  
  {sortedYears.map((year) => {
    const monthsInYear = booksByYear[year];
    const sortedMonths = Object.keys(monthsInYear).sort((a, b) => {
      const monthA = new Date(`${a} 1, ${year}`).getMonth();
      const monthB = new Date(`${b} 1, ${year}`).getMonth();
      return monthB - monthA;
    });
    
    return (
      <div class="mb-8">
        <h2 class="text-xl font-bold mb-4 text-[#222]">{year}</h2>
        {sortedMonths.map((month) => (
          <div class="mb-6">
            <h3 class="text-lg font-semibold mb-3 text-gray-700">{month}</h3>
            <ul class="grid gap-4 sm:grid-cols-2">
              {monthsInYear[month].map((b) => (
                <li class="rounded border border-gray-200 bg-white p-4 shadow-sm transition hover:shadow hover:-translate-y-0.5">
                  <a href={`/books/${b.slug}`} class="no-underline">
                    <div class="mb-2 flex items-center justify-between">
                      <h4 class="text-lg font-semibold text-[#222]">{b.title}</h4>
                      <span class={`inline-flex items-center rounded-full px-2 py-0.5 text-[10px] font-semibold ring-1 ring-inset ${b.status === 'in-progress' ? 'bg-[#ed225d]/10 text-[#ed225d] ring-[#ed225d]/30' : 'bg-emerald-600/10 text-emerald-700 ring-emerald-600/30'}`}>{b.status ?? 'tbd'}</span>
                    </div>
                    <p class="text-xs opacity-70 mb-2">{b.author}</p>
                    <p class="text-sm opacity-90">{b.summary}</p>
                  </a>
                </li>
              ))}
            </ul>
          </div>
        ))}
      </div>
    );
  })}
</BaseLayout>
